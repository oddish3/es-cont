size = .3,
fill = "darkblue")+
# geom_ribbon(aes(ymin= conf.low, ymax=  conf.high),
#             alpha = .1,
#             size = .3,
#             fill = "darkblue")+
geom_line(linewidth = 1.2,
alpha = 2,
colour = "darkblue") +
geom_ribbon(data = es_below_tibble,aes(ymin= p_conf_low, ymax=  p_conf_high),
alpha = .2,
size = 1,
fill = "#E69F00")+
# geom_ribbon(data = es_below_tibble,aes(ymin= conf.low, ymax=  conf.high),
#             alpha = .1,
#             size = 1,
#             fill = "#E69F00")+
geom_line(data = es_below_tibble,linewidth = 1.2,
alpha = 2,
colour = "#E69F00") +
xlab("Years relative to first shale drilling") +
ylab("Average differences in log(employment)") +
scale_y_continuous(breaks = seq(-0.04, .12, 0.02), limits = c(-0.04,0.12))+
scale_x_continuous(breaks = seq(-11,4, 1))+
theme(axis.text.y = element_text(size = 20))+
theme(axis.text.x = element_text(size = 20)) +
theme(axis.title = element_text(color="black",
size = 20))+
theme(plot.title=ggtext::element_markdown(size=20,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_es_together
#---------------------------------------------------------------------------------------
# Save the plot
ggsave(here("plots/Fig1.pdf"),
plot = p_es_together, width = 12, height = 5,  bg = "transparent", dpi = 300)
att_all <- did::att_gt(yname = "y",
tname = "t",
idname = "i",
gname = "G",
data = data_bcgk %>% mutate(G = ifelse(d==0, Inf, G)),
control_group = "notyettreated",
base_period = "universal",
est_method = "reg")
es_all <- did::aggte(att_all,
type = "dynamic",
min_e = -11,
max_e = 4)
# Put the coefficients in a tibble that is easy to plot
es_all_tibble <- broom::tidy(es_all) %>%
mutate(estimate = ifelse(is.na(estimate), 0, estimate),
conf.low = ifelse(is.na(conf.low), 0, conf.low),
conf.high = ifelse(is.na(conf.high), 0, conf.high),
p_conf_low = ifelse(is.na(point.conf.low), 0, point.conf.low),
p_conf_high = ifelse(is.na(point.conf.high), 0, point.conf.high))
p_es_all<- ggplot(data = es_all_tibble,
mapping = aes(x = event.time, y = estimate)) +
geom_line(linewidth = 0.5, alpha = 2, colour = "black") +
geom_vline(xintercept = -1, color = 'grey', linewidth = 1., linetype = "dotted") +
geom_hline(yintercept = 0, colour="black",  linetype = "dotted")+
geom_pointrange(aes(ymin = conf.low, ymax = conf.high), show.legend = FALSE, linetype= 1, linewidth = 1.1,
color = "red")+
geom_pointrange(aes(ymin = p_conf_low, ymax = p_conf_high), show.legend = FALSE, linewidth = 1.)+
xlab("Years relative to first shale drilling") +
ylab("Average differences in log(employment)") +
scale_y_continuous(breaks = seq(-0.04, .12, 0.02), limits = c(-0.04,0.12))+
scale_x_continuous(breaks = seq(-11,4, 1))+
theme(axis.text.y = element_text(size = 12))+
theme(axis.text.x = element_text(size = 12)) +
theme(axis.title = element_text(color="black",  size = 12))+
theme(plot.title=ggtext::element_markdown(size = 12,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_es_all
#---------------------------------------------------------------------------------------
#ES with all units but using the style of the paper
p_es_all2 <- ggplot(data = es_all_tibble,
mapping = aes(x = event.time, y = estimate)) +
#geom_line(linewidth = 0.5, alpha = 2, colour = "black") +
geom_vline(xintercept = -1, color = 'grey', linewidth = 1., linetype = "dotted") +
geom_hline(yintercept = 0, colour="black",  linetype = "dotted")+
geom_ribbon(aes(ymin= p_conf_low, ymax=  p_conf_high),
alpha = .1,
size = .3,
fill = "#009E73")+
# geom_ribbon(aes(ymin= conf.low, ymax=  conf.high),
#             alpha = .1,
#             size = .3,
#             fill = "#009E73")+
geom_line(linewidth = 1.2,
alpha = 2,
colour = "#009E73") +
xlab("Years relative to first shale drilling") +
ylab("Average differences in log(employment)") +
scale_y_continuous(breaks = seq(-0.04, .12, 0.02), limits = c(-0.04,0.12))+
scale_x_continuous(breaks = seq(-11,4, 1))+
theme(axis.text.y = element_text(size = 20))+
theme(axis.text.x = element_text(size = 20)) +
theme(axis.title = element_text(color="black",
size = 20))+
theme(plot.title=ggtext::element_markdown(size=20,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_es_all2
#---------------------------------------------------------------------------------------
# Save the plot
ggsave(here("plots/Appendix_Fig_ES.pdf"),
plot = p_es_all2, width = 12, height = 5,  bg = "transparent", dpi = 300)
#---------------------------------------------------------------------------------------
# Load data
load(here("data/processed/data_BCGK2019.RData"))
# Set seed
set.seed(20240103)
#---------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Start setting up ATT procedure
#-----------------------------------------------------------------------------
#------------------------------------------------------------------------------
# Compute cubic splines
#-----------------------------------------------------------------------------
splines_SR <- fixest::feols(ddY ~ bSpline(d,
knots = quantile(d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE) -1,
data = data_bcgk_SR,
cluster = ~ i)
data_bcgk_SR$d
#---------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Start setting up ATT procedure
#-----------------------------------------------------------------------------
#------------------------------------------------------------------------------
# Compute cubic splines
#-----------------------------------------------------------------------------
debugonce(bSpline)
debugonce(fixest::feols)
splines_SR <- fixest::feols(ddY ~ bSpline(d,
knots = quantile(d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE) -1,
data = data_bcgk_SR,
cluster = ~ i)
View(dots)
dots
verbose
names(dots)
#---------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Start setting up ATT procedure
#-----------------------------------------------------------------------------
#------------------------------------------------------------------------------
# Compute cubic splines
#-----------------------------------------------------------------------------
debugonce(bSpline)
debugonce(fixest::feols)
splines_SR <- fixest::feols(ddY ~ bSpline(d,
knots = quantile(d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE) -1,
data = data_bcgk_SR,
cluster = ~ i)
View(env)
bSpline(d,
knots = quantile(d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE)
bSpline(data_bcgk_SR$d,
knots = quantile(data_bcgk_SR$d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE)
a = bSpline(data_bcgk_SR$d,
knots = quantile(data_bcgk_SR$d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE)
View(a)
b = feols(data_bcgk_SR$ddY ~ a -1, cluster = ~ i)
View(splines_SR)
splines_SR[["coefficients"]]
View(splines_SR)
b = splines_SR[["fitted.values"]]
mean(b)
#-----------------------------------------------------------------------------
# Compute ATT(d|d) for all values of the dose d
att_SR <- predict(splines_SR)
quantile(data_bcgk_SR$d)
#-----------------------------------------------------------------------------
# Compute influence functions
#-----------------------------------------------------------------------------
# Get splines for dosage
spline_dosage_SR <- bSpline(data_bcgk_SR$d,
knots = quantile(data_bcgk_SR$d,probs = c(0.25, 0.5, 0.75)),
degree = 3,
intercept = TRUE)
View(spline_dosage_SR)
# Sample Size
n_treated_SR <- length(data_bcgk_SR$d)
View(data_bcgk_SR)
# compute influence function of spline beta
infl_reg_SR <- splines_SR$residuals * spline_dosage_SR %*% (MASS::ginv(t(spline_dosage_SR)%*%spline_dosage_SR/n_treated_SR))
# compute influence function of spline beta
infl_reg_SR <- splines_SR$residuals * spline_dosage_SR %*% (MASS::ginv(t(spline_dosage_SR)%*%spline_dosage_SR/n_treated_SR))
View(.Last.value)
# Now, put all terms together to get the influence function of the ATT(d|d)
infl_att_SR <-  infl_reg_SR %*% t(spline_dosage_SR)
View(infl_att_SR)
dim(infl_att_SR)
# Compute standard error
se_att_SR <- sqrt(colMeans(infl_att_SR^2)/(n_treated_SR))
# Put results in a data frame
results_cdid_SR <- data.frame(d = data_bcgk_SR$d,
att = att_SR,
p_uci_att = (att_SR + 1.96*se_att_SR),
p_lci_att = (att_SR - 1.96*se_att_SR))%>%
filter(d<6 & d>2)
# Replication files for Difference-in-Differences with a Continuous Treatment
# by Brantly Callaway, Andrew Goodman-Bacon and Pedro H. C. Sant'Anna
#-----------------------------------------------------------------------------
# Empirical application based on Acemoglu and Finkelstein (2008)
#-----------------------------------------------------------------------------
# This portion of the codes compute our nonparametric plots
#-----------------------------------------------------------------------------
# Clear memory
rm(list=ls())
# Load packages
library(tidyr)
library(dplyr)
library(fixest)
library(broom)
library(stringr)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(here)
#library(np)
#remotes::install_github('JeffreyRacine/npiv')
#library(npiv)
library(latex2exp)
library(patchwork)
library(ggtext)
#---------------------------------------------------------------------------------------
# Load data
load(here("data/processed/splines_estimates1.RData"))
# Load ggplot theme
source(here("codes/00_ggplot_theme.R"))
#---------------------------------------------------------------------------------------
# Compute range
range_Y <- range(results_cdid_SR$p_lci_att, results_cdid_SR$p_uci_att,
results_cdid_LR$p_lci_att, results_cdid_LR$p_uci_att)
range_Y
#-----------------------------------------------------------------------------
# Plot ATT(d|d) for Short-Run
p_att_SR <- ggplot(data = results_cdid_SR,
mapping = aes(x = d, y = att)) +
geom_ribbon(aes(ymin= p_lci_att, ymax=  p_uci_att),
alpha = 0.2,
size = 1,
fill = "#E69F00")+
geom_line(linewidth = 1.2,
alpha = 2,
colour = "#E69F00") +
geom_hline(yintercept = 0,
colour="black",
linewidth = 0.5,
linetype = "dotted")+
ylim(range(-0.04, 0.12))+
scale_y_continuous(breaks = seq(-0.04, 0.12, 0.02), limits = c(-0.04,0.12))+
xlab("County prospectivity score") +
ylab("Average differences in log(employment)") +
theme(axis.text.y = element_text(size = 12))+
theme(axis.text.x = element_text(size = 12)) +
theme(axis.title = element_text(color="black",
size = 12))+
theme(plot.title=ggtext::element_markdown(size=14,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_att_SR
# Plot ATT(d|d) for Long-Run
p_att_LR <- ggplot(data = results_cdid_LR,
mapping = aes(x = d, y = att)) +
geom_ribbon(aes(ymin= p_lci_att, ymax=  p_uci_att),
alpha = 0.1,
size = 1,
fill = "darkblue")+
geom_line(linewidth = 1.2,
alpha = 2,
colour = "darkblue") +
geom_hline(yintercept = 0,
colour="black",
linewidth = 0.5,
linetype = "dotted")+
ylim(range(-0.04, 0.12))+
scale_y_continuous(breaks = seq(-0.04, 0.12, 0.02), limits = c(-0.04,0.12))+
xlab("County prospectivity score") +
ylab("Average differences in log(employment)") +
theme(axis.text.y = element_text(size = 12))+
theme(axis.text.x = element_text(size = 12)) +
theme(axis.title = element_text(color="black",
size = 12))+
theme(plot.title=ggtext::element_markdown(size=14,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_att_LR
p_att_all <- ggplot(data = results_cdid_all,
mapping = aes(x = d, y = att)) +
geom_ribbon(aes(ymin= p_lci_att, ymax=  p_uci_att),
alpha = 0.3,
size = 1,
fill = "#009E73")+
geom_line(linewidth = 1.2,
alpha = 2,
colour = "#009E73") +
geom_hline(yintercept = 0,
colour="black",
linewidth = 0.5,
linetype = "dotted")+
ylim(range(-0.04, 0.12))+
scale_y_continuous(breaks = seq(-0.04, 0.12, 0.02), limits = c(-0.04,0.12))+
xlab("County prospectivity score") +
ylab("Average differences in log(employment)") +
theme(axis.text.y = element_text(size = 18))+
theme(axis.text.x = element_text(size = 18)) +
theme(axis.title = element_text(color="black",
size = 18))+
theme(plot.title=ggtext::element_markdown(size=20,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_att_all
#-----------------------------------------------------------------------------
# Do a combine plot (Figure 2 in the paper)
p_att_combined <- ggplot(data = results_cdid_LR,
mapping = aes(x = d, y = att)) +
geom_ribbon(aes(ymin= p_lci_att, ymax=  p_uci_att),
alpha = 0.1,
size = 1,
fill = "darkblue")+
geom_line(linewidth = 1.2,
alpha = 2,
colour = "darkblue") +
geom_hline(yintercept = 0,
colour="black",
linewidth = 0.5,
linetype = "dotted")+
geom_ribbon(data = results_cdid_SR, aes(ymin= p_lci_att, ymax=  p_uci_att),
alpha = 0.2,
size = 1,
fill = "#E69F00")+
geom_line(data = results_cdid_SR,mapping = aes(x = d, y = att),
linewidth = 1.2,
alpha = 2,
colour = "#E69F00") +
ylim(range(-0.04, 0.12))+
scale_y_continuous(breaks = seq(-0.04, 0.12, 0.02), limits = c(-0.04,0.12))+
scale_x_continuous(breaks = seq(2, 6, 0.5))+
xlab("County prospectivity score") +
ylab("Average differences in log(employment)") +
theme(axis.text.y = element_text(size = 20))+
theme(axis.text.x = element_text(size = 20)) +
theme(axis.title = element_text(color="black",
size = 20))+
theme(plot.title=ggtext::element_markdown(size=20,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
)
p_att_combined
load("data2.RData")
#---------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Start setting up ATT procedure
#-----------------------------------------------------------------------------
#------------------------------------------------------------------------------
# Compute cubic splines
#-----------------------------------------------------------------------------
devtools::install_github("shommazumder/binscatteR")
library(ggplot2)
library(binscatteR)
library(np)
#-----------------------------------------------------------------------------
# Set ggplot theme
#-----------------------------------------------------------------------------
library(ggplot2)
library(ggthemes)
library(ggthemes)
library(patchwork)
library(ggtext)
#-----------------------------------------------------------------------------
theme_set(
#theme_clean() +
theme_classic() +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
legend.background = element_rect(color = "white"),
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(10, "lines"))
)
source("~/Documents/R_folder/201785-V1/codes/1_data_preparation.R")
source("~/Documents/R_folder/201785-V1/codes/2_Fig1_event_study.R")
# Replication files for Event Studies with a Continuous Treatment
# by Brantly Callaway, Andrew Goodman-Bacon and Pedro H. C. Sant'Anna
#-----------------------------------------------------------------------------
# Empirical application based on Bartik, Currie, Greenstone, Knittel (2019, AEJ)
#-----------------------------------------------------------------------------
# This portion of the codes compute our nonparametric estimates
#-----------------------------------------------------------------------------
# Clear memory
rm(list=ls())
# Load packages
library(tidyr)
library(dplyr)
library(fixest)
library(broom)
library(stringr)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(here)
library(latex2exp)
library(patchwork)
library(ggtext)
library(splines2)
#---------------------------------------------------------------------------------------
# Load data
load(here("data/processed/data_BCGK2019.RData"))
# Set seed
set.seed(20240103)
#---------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Start setting up ATT procedure
#-----------------------------------------------------------------------------
#------------------------------------------------------------------------------
# Compute cubic splines
#-----------------------------------------------------------------------------
devtools::install_github("shommazumder/binscatteR")
library(ggplot2)
library(binscatteR)
library(np)
head(data_bcgk_SR)
data <- data_bcgk_SR
unique(data$G)
dataG <- NULL
View(data)
data$G <- NULL
summary(data$G)
summary(data$d)
data$d <- (data$d - min(data$d))/(max(data$d) - min(data$d))
summary(data$d)
ggplot(data, aes(x = d, y = ddY)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
ggplot(data, aes(x = d, y = ddY)) +
geom_line()
ggplot(data, aes(x = d, y = ddY)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Dose-Response Function",
x = "Dose",
y = "Outcome")
ggplot(data, aes(x = d, y = ddY)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Dose-Response Function",
x = "Dose",
y = "Outcome")
dose <- data$d
p <- ggplot(data, aes(x = d, y = ddY)) +
geom_histogram()
dy <- data$ddY
p <- ggplot(data, aes(x = d, y = ddY)) +
geom_histogram()
p
ggplot(data, aes(x = d, y = ddY)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Dose-Response Function",
x = "Dose",
y = "Outcome"))
ggplot(data, aes(x = d, y = ddY)) +
geom_point()
ggplot(data, aes(x = d, y = ddY)) +
geom_histogram()
ggplot(data$d, aes(x = d)) +
geom_histogram()
ggplot(data.frame(data$d), aes(x = d)) +
geom_histogram()
ggplot(data.frame(dose = data$d), aes(x = data$d)) +
geom_histogram()
